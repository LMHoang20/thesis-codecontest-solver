{
  "name": "1575_A. Another Sorting Problem",
  "description": "Andi and Budi were given an assignment to tidy up their bookshelf of n books. Each book is represented by the book title \u2014 a string s_i numbered from 1 to n, each with length m. Andi really wants to sort the book lexicographically ascending, while Budi wants to sort it lexicographically descending.\n\nSettling their fight, they decided to combine their idea and sort it asc-desc-endingly, where the odd-indexed characters will be compared ascendingly, and the even-indexed characters will be compared descendingly.\n\nA string a occurs before a string b in asc-desc-ending order if and only if in the first position where a and b differ, the following holds:\n\n  * if it is an odd position, the string a has a letter that appears earlier in the alphabet than the corresponding letter in b; \n  * if it is an even position, the string a has a letter that appears later in the alphabet than the corresponding letter in b. \n\nInput\n\nThe first line contains two integers n and m (1 \u2264 n \u22c5 m \u2264 10^6).\n\nThe i-th of the next n lines contains a string s_i consisting of m uppercase Latin letters \u2014 the book title. The strings are pairwise distinct.\n\nOutput\n\nOutput n integers \u2014 the indices of the strings after they are sorted asc-desc-endingly.\n\nExample\n\nInput\n\n\n5 2\nAA\nAB\nBB\nBA\nAZ\n\n\nOutput\n\n\n5 2 1 3 4\n",
  "tags": [
    "data structures",
    "sortings",
    "strings"
  ],
  "difficulty": 7,
  "id": 1575,
  "sample_io": [
    {
      "input": "5 2\nAA\nAB\nBB\nBA\nAZ\n",
      "output": [
        "5 2 1 3 4 \n"
      ]
    }
  ],
  "test_list": [
    {
      "input": "5 2\nAA\nAB\nBB\nBA\nZA\n",
      "output": [
        "2 1 3 4 5\n"
      ]
    },
    {
      "input": "5 2\nAA\nAB\nCB\nBA\nAZ\n",
      "output": [
        "5 2 1 4 3\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nCB\nBA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nCB\nAB\nAZ\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nBA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "5 2\nAA\nAB\nBC\nBA\nAZ\n",
      "output": [
        "5 2 1 3 4\n"
      ]
    },
    {
      "input": "3 2\nAA\nAB\nCB\nAB\nAZ\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "4 2\nBA\nAC\nEA\nAA\nZ@\n",
      "output": [
        "2 4 1 3\n"
      ]
    },
    {
      "input": "3 2\nAA\nBA\nCB\nAB\nAZ\n",
      "output": [
        "1 2 3\n"
      ]
    },
    {
      "input": "4 2\nAA\nAC\nCB\nBA\nAZ\n",
      "output": [
        "2 1 4 3\n"
      ]
    },
    {
      "input": "4 2\nBA\nBC\nEA\nAB\nZ@\n",
      "output": [
        "4 2 1 3\n"
      ]
    },
    {
      "input": "3 2\nBA\nAD\nAB\nBA\nC[\n",
      "output": [
        "2 3 1\n"
      ]
    },
    {
      "input": "3 2\nAA\nBA\nBC\nAB\nAZ\n",
      "output": [
        "1 3 2\n"
      ]
    },
    {
      "input": "5 2\nAA\nBA\nCC\nBB\nAZ\n",
      "output": [
        "5 1 4 2 3\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nCB\nAB\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\nAB\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nCB\nAB\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBC\nAB\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nAB\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nBA\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nAA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCA\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nBA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nAB\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nAB\n@Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nAB\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "5 2\nAA\nAB\nBB\nBA\nZB\n",
      "output": [
        "2 1 3 4 5\n"
      ]
    },
    {
      "input": "2 2\nAA\nAD\nCB\nAB\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBB\nAB\nAZ\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nBC\nCB\nAB\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBD\nAB\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nAB\n[A\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nBA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBC\nBA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nAA\nAZ\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCB\nAA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nDA\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCA\nAA\n[@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nCA\nBA\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nAC\nAB\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nBA\nAB\n@Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nCA\nAB\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "5 2\nAA\nAB\nCC\nBA\nAZ\n",
      "output": [
        "5 2 1 4 3\n"
      ]
    },
    {
      "input": "2 2\nBA\nBC\nBB\nAB\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nAC\nAB\n[A\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\nBA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBC\nBA\nAZ\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nAA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCA\nAA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nAA\nZ?\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "3 2\nAA\nAC\nDA\nAA\nZ@\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nCA\nAA\n[@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAB\nCA\nCA\nBA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nAC\nAB\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nBA\nBB\n@Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCB\nCA\nAB\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "3 2\nAA\nAB\nCC\nBA\nAZ\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "1 2\nBA\nBC\nBB\nAB\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nAC\nAC\n[A\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nCB\nCA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBC\nBA\nA[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nAB\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCA\nAA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nAA\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "3 2\nAA\nAC\nEA\nAA\nZ@\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nAC\nAA\n[@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nBB\nCA\nCA\nBA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAB\nBA\nAC\nAB\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nBA\nBB\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCB\nCA\nAC\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nBA\nCB\nBB\nAB\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nAC\nAC\n[B\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nBA\nAZ\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nBC\nBA\nA[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAB\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCA\nAB\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBC\nA@\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "3 2\nBA\nAC\nEA\nAA\nZ@\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "1 2\nBB\nAC\nCA\nBA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nBA\nBB\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nCB\nCA\nAC\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nCB\nBB\nAB\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nAC\nAC\n[B\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nBA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nCB\nBA\nA[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCB\nAB\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nBC\nA@\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nBB\nAC\nCA\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBA\nBB\n?Z\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nBC\nCA\nAC\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nAC\nAC\n[C\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\nBA\nA[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nDB\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAD\nBC\nA@\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "4 2\nBA\nAC\nEA\nAB\nZ@\n",
      "output": [
        "2 4 1 3\n"
      ]
    },
    {
      "input": "1 2\nCB\nAC\nCA\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBA\nBB\nZ?\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nBB\nCA\nAC\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nAC\nAD\n[C\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nCB\nBA\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nAD\nBC\nA?\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nCB\nCA\nCA\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBB\nBB\nZ?\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nBB\nCA\nCA\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nCA\nAC\nAD\n[C\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nBB\nBA\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nAD\nBB\nA?\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nBB\nCA\nDA\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nBB\nAB\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nDA\nBB\nA?\n?Z\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nBB\nCA\nDA\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nBB\nAA\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nAD\nBB\nA?\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nBB\nCA\nD@\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nBB\nBA\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAD\nBB\nA?\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nBB\nAC\nD@\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nBB\nAB\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAD\nBA\nA?\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nAB\nAB\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAD\nAB\nA?\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nAB\nBA\nA[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAD\nCA\nA?\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nAB\nBA\nB[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nAD\nCA\nA>\n?Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nDA\nAB\nCA\nB[\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nDA\nAB\nCA\nB[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nAB\nCA\nB[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nAB\nAC\nB[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nAB\nAC\nC[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nAB\nCA\nC[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nAB\nBA\nC[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAD\nAB\nBA\nC[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAD\nAB\nBA\nC[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAE\nAB\nBA\nC[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAE\nAB\nBA\n[C\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nCB\nAC\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "3 2\nAA\nAC\nCB\nAB\nAZ\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nDB\nAB\nAZ\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nCB\nBA\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBC\nAC\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\nAB\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCC\nBA\nZA\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nBC\nBA\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBC\nAA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCC\nAA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAD\nCB\nAA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCB\n@A\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nCA\nAB\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCA\nAB\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nAC\nAB\n@Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nAC\nAB\n@Y\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAA\nBC\nBD\nAB\nYA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "3 2\nAA\nAC\nBC\nAB\n[A\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nAC\nBA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 1\nAA\nAC\nBC\nAA\nAZ\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCB\nAA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nDA\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nCB\nAA\n[@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 1\nAB\nCA\nCA\nBA\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nCA\nAB\n@Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nBC\nBA\nAB\n@Z\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nAC\nAB\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "5 2\nAA\nAB\nCC\nBB\nAZ\n",
      "output": [
        "5 2 1 4 3\n"
      ]
    },
    {
      "input": "2 2\nBA\nCB\nBB\nAB\nAZ\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBC\nBA\nAY\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nBA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAB\nAC\nCB\nAA\n[@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCA\nAD\nAB\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAB\nCB\nCB\nAB\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "3 2\nAA\nAB\nCC\nBA\nAY\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "1 2\nBA\nBC\nBB\nBB\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nAC\nAC\n[A\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nBC\nBA\nAZ\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAB\nBB\nBA\nA[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nBC\nAB\n@[\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nBC\nCA\nAA\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nCA\nBC\nAA\n?Z\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "3 2\nAB\nAC\nEA\nAA\nZ@\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nAC\nAA\nZ@\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nBB\nCA\nCA\nBA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAB\nBA\nAC\nBA\nZ@\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "2 2\nBB\nCB\nCA\nAC\n@Y\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nBA\nCB\nBB\nBA\nZA\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nBA\nAC\nAC\nAC\n[B\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAA\nAZ\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAB\nBC\nB@\nA[\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "1 2\nAA\nAC\nCB\nAA\n@Z\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "2 2\nAA\nAC\nCA\nBB\n?Z\n",
      "output": [
        "2 1\n"
      ]
    },
    {
      "input": "2 2\nAB\nCB\nBB\nAB\nZA\n",
      "output": [
        "1 2\n"
      ]
    },
    {
      "input": "1 2\nAA\nCA\nAC\nAC\n[B\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "3 2\nAA\nAB\nCB\nBA\nA[\n",
      "output": [
        "2 1 3\n"
      ]
    },
    {
      "input": "1 1\nAA\nAC\nCB\nAB\nZ@\n",
      "output": [
        "1\n"
      ]
    },
    {
      "input": "1 2\nBA\nAC\nCC\nAB\n@Z\n",
      "output": [
        "1\n"
      ]
    }
  ],
  "source_codes": [
    "\nn, m = map(int, input().split())\nstrings = [input() for _ in range(n)]\n\nsorted_strings = []\n\nfor string in strings:\n    odd_part = string[::2]\n    even_part = string[1::2]\n    odd_part = sorted(odd_part)\n    even_part = sorted(even_part, reverse=True)\n    sorted_string = ''.join(odd_part + even_part)\n    sorted_strings.append(sorted_string)\n\nsorted_strings.sort()\n\nfor i, string in enumerate(strings):\n    concatenated_string = string + sorted_strings[i]\n    print(concatenated_string.index(string) + 1)\n\n\n"
  ],
  "responses": [
    "\nn, m = map(int, input().split())\nstrings = [input() for _ in range(n)]\n\nsorted_strings = []\n\nfor string in strings:\n    odd_part = string[::2]\n    even_part = string[1::2]\n    odd_part = sorted(odd_part)\n    even_part = sorted(even_part, reverse=True)\n    sorted_string = ''.join(odd_part + even_part)\n    sorted_strings.append(sorted_string)\n\nsorted_strings.sort()\n\nfor i, string in enumerate(strings):\n    concatenated_string = string + sorted_strings[i]\n    print(concatenated_string.index(string) + 1)\n\n\n"
  ],
  "prompt_tokens": [
    0
  ],
  "completion_tokens": [
    0
  ],
  "no_of_try": 1,
  "api_calls": 19,
  "is_solved": false,
  "language": "Python3",
  "task_id": 1575
}