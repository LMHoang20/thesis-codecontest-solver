Vasya and Vitya are playing a game where Vasya thinks of two integers (a, b) between 1 and n.
Vitya's goal is to guess these numbers within 600 rounds.
In each round, Vitya provides two guesses (x, y), and Vasya responds with one of three phrases:
    x is less than a
    y is less than b
    x is greater than a OR y is greater than b (Vasya can choose this even if only one of the conditions is true)
The problem requires finding an optimal strategy for Vitya to guess the numbers efficiently.

## First Solution

Maintaining the Set of Possibilities: Vitya maintains the set of possible answers as a union of three rectangles forming an angle:
    A = [xl, xm) * [yl, ym)
    B = [xl, xm) * [ym, yr)
    C = [xm, xr) * [yl, ym)
    where xl < xm ≤ xr and yl < ym ≤ yr
    The areas of these rectangles are denoted by SA, SB, and SC.
Initial State: The initial state is (0, n+1, n+1, 0, n+1, n+1), representing the entire possible range of values.
Query Strategy: Vitya uses the following strategy to make queries:
    1. If SB ≤ SA + SC and SB ≤ SA + SB: Vitya queries (⌊(xl + xm)/2⌋, ⌊(yl + ym)/2⌋), targeting the middle point of the central rectangle.
    2. If SB > SA + SC: Vitya queries (⌊(xl + xm)/2⌋, ym), targeting the middle of the upper boundary of the central rectangle.
    3. If SC > SA + SB: Vitya queries (xm, ⌊(yl + ym)/2⌋), targeting the middle of the right boundary of the central rectangle.
Area Reduction: The key idea is to show that the area of the possible answers decreases by at least a quarter every two queries.
Proof of Area Reduction:
    In case 1 (SB ≤ SA + SC and SB ≤ SA + SB), regardless of Vasya's answer, at least a quarter of the total area is eliminated in a single query.
    In case 2 (SB > SA + SC), if the answer is 1 or 3, a quarter of the total area is eliminated. If the answer is 2, the next query will fall under case 1, guaranteeing a quarter reduction.
    Case 3 (SC > SA + SB) is similar to case 2.
Maximum Number of Queries: With this strategy, the maximum number of queries needed is approximately 577 (1 + 2 * log_{4/3} ((10^18)^2)).

## Second Solution

Ladder Representation: Vitya represents the set of possible answers as a ladder shape.
Cutting Off Areas: Vitya finds the minimal X and Y values such that the area of the ladder to the left of X and below Y is at least 1/3 of the total area.
Query Strategy: Vitya then queries (X, Y).
Area Reduction Guarantee: This query guarantees that at least 1/3 of the ladder's area is eliminated.
Maximum Number of Queries: This strategy requires a maximum of approximately 205 queries (1 + log_{3/2} ((10^18)^2)).